name: Análisis con SonarQube
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  sonar:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout del código
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Configurar JDK
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'
          cache: 'maven'
      
      - name: Configurar Node.js
        uses: actions/setup-node@v4 # Usar v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json
  
      - name: Create .env file
        run: |
          echo "STRIPE_SECRET_KEY=${{ secrets.STRIPE_SECRET_KEY }}" >> .env
          echo "STRIPE_API_KEY=${{ secrets.STRIPE_API_KEY }}" >> .env
          echo "STRIPE_WEBHOOK_SECRET=${{ secrets.STRIPE_WEBHOOK_SECRET }}" >> .env
          echo "EXPO_PUBLIC_STRIPE_API_KEY=${{ secrets.EXPO_PUBLIC_STRIPE_API_KEY }}" >> .env

      - name: Compilar y ejecutar pruebas Backend (Maven)
        run: mvn -B clean verify

      - name: Instalar dependencias Frontend (npm)
        run: npm ci
        working-directory: ./frontend
      #- name: Ejecutar pruebas y cobertura Frontend
      #   run: npm test -- --coverage # Ajusta el comando según tu configuración
      #   working-directory: ./frontend

      - name: Set up SonarScanner
        uses: SonarSource/sonar-scanner-cli
        with:
          sonar-scanner-version: '7.1.0.4889'

      - name: Análisis con SonarScanner CLI
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: sonar-scanner