name: Análisis con SonarQube
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  sonar:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout del código
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Configurar JDK
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'
          cache: 'maven'
      
      - name: Configurar Node.js
        uses: actions/setup-node@v4 # Usar v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json
  
      - name: Create .env file
        run: |
          echo "STRIPE_SECRET_KEY=${{ secrets.STRIPE_SECRET_KEY }}" >> .env
          echo "STRIPE_API_KEY=${{ secrets.STRIPE_API_KEY }}" >> .env
          echo "STRIPE_WEBHOOK_SECRET=${{ secrets.STRIPE_WEBHOOK_SECRET }}" >> .env
          echo "EXPO_PUBLIC_STRIPE_API_KEY=${{ secrets.EXPO_PUBLIC_STRIPE_API_KEY }}" >> .env

      - name: Compilar y ejecutar pruebas Backend (Maven)
        run: mvn -B clean verify

      - name: Instalar dependencias Frontend (npm)
        run: npm ci
        working-directory: ./frontend
      #- name: Ejecutar pruebas y cobertura Frontend
      #   run: npm test -- --coverage # Ajusta el comando según tu configuración
      #   working-directory: ./frontend

      - name: Mostrar contenido de sonar-project.properties # <--- AÑADE ESTE PASO
        run: |
          echo "--- Contenido de sonar-project.properties ---"
          cat sonar-project.properties
          echo "-------------------------------------------"

      - name: SonarCloud Scan
        # Usamos la acción SonarSource/sonarqube-scan-action
        # Reemplaza @v2.1.0 por la versión "Latest" que encuentres en el enlace de arriba
        uses: SonarSource/sonarqube-scan-action@v2.1.0
        env:
          # Token de SonarCloud (Obligatorio)
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          # Token de GitHub (Necesario para decorar PRs en GitHub)
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

